#!/bin/bash
# Script complet pour configurer les OU, cr√©er des utilisateurs r√©partis dans des OU sp√©cifiques
# et appliquer les politiques de s√©curit√© sur Samba AD.
#
# IMPORTANT : Sauvegardez vos donn√©es avant d'ex√©cuter ce script en production.
#
# Log file
LOG_FILE="/var/log/samba-setup.log"

echo "$(date '+%Y-%m-%d %H:%M:%S') - D√©but de la configuration des OU, utilisateurs et politiques de s√©curit√©..." | tee -a "$LOG_FILE"
trap 'echo "Erreur √† la ligne $LINENO ! V√©rifier $LOG_FILE"; exit 1' ERR

echo "====================" | tee -a "$LOG_FILE"

#############################
# 1. Suppression automatique des OU existantes (sauf l'OU principale NS)
#############################
echo "$(date '+%Y-%m-%d %H:%M:%S') - Recherche et suppression automatique des OU existantes (sauf l'OU principale NS)..." | tee -a "$LOG_FILE"

# On liste les OU √† partir du DN racine
samba-tool ou list "DC=northstar,DC=com" | while read -r OU; do
    if [[ "$OU" != "OU=NS,DC=northstar,DC=com" && -n "$OU" ]]; then
        echo "$(date '+%Y-%m-%d %H:%M:%S') - Suppression de l'OU : $OU" | tee -a "$LOG_FILE"
        samba-tool ou delete "$OU" | tee -a "$LOG_FILE"
        echo "$(date '+%Y-%m-%d %H:%M:%S') - OU $OU supprim√©e." | tee -a "$LOG_FILE"
    fi
done

echo "====================" | tee -a "$LOG_FILE"

#############################
# 2. Cr√©ation des OU
#############################
echo "$(date '+%Y-%m-%d %H:%M:%S') - Cr√©ation de l'OU principale NS..." | tee -a "$LOG_FILE"
samba-tool ou create "OU=NS,DC=northstar,DC=com" 2>/dev/null || echo "OU NS existe d√©j√†" | tee -a "$LOG_FILE"
echo "$(date '+%Y-%m-%d %H:%M:%S') - OU NS cr√©√©e ou d√©j√† existante." | tee -a "$LOG_FILE"

# Cr√©ation des OU parents indispensables
echo "$(date '+%Y-%m-%d %H:%M:%S') - Cr√©ation des OU parent (Workstations et Users)..." | tee -a "$LOG_FILE"
samba-tool ou create "OU=Workstations,OU=NS,DC=northstar,DC=com" 2>/dev/null || echo "OU Workstations existe d√©j√†" | tee -a "$LOG_FILE"
samba-tool ou create "OU=Users,OU=NS,DC=northstar,DC=com" 2>/dev/null || echo "OU Users existe d√©j√†" | tee -a "$LOG_FILE"

# Liste des sous-OU √† cr√©er sous les conteneurs Workstations et Users
OU_LIST=(
    "OU=UsersWorkstations,OU=Workstations,OU=NS,DC=northstar,DC=com"
    "OU=AdminWorkstations,OU=Workstations,OU=NS,DC=northstar,DC=com"
    "OU=Comptabilit√©,OU=Users,OU=NS,DC=northstar,DC=com"
    "OU=Finance,OU=Users,OU=NS,DC=northstar,DC=com"
    "OU=Administration,OU=Users,OU=NS,DC=northstar,DC=com"
)

echo "$(date '+%Y-%m-%d %H:%M:%S') - Cr√©ation des autres OU..." | tee -a "$LOG_FILE"
for OU in "${OU_LIST[@]}"; do
    samba-tool ou create "$OU" 2>/dev/null || echo "OU $OU existe d√©j√†" | tee -a "$LOG_FILE"
    echo "$(date '+%Y-%m-%d %H:%M:%S') - OU $OU cr√©√©e ou d√©j√† existante." | tee -a "$LOG_FILE"
done

echo "====================" | tee -a "$LOG_FILE"

#############################
# 3. Cr√©ation des utilisateurs r√©partis dans des OU sp√©cifiques
#############################
echo "$(date '+%Y-%m-%d %H:%M:%S') - Cr√©ation des utilisateurs r√©partis dans des OU sp√©cifiques..." | tee -a "$LOG_FILE"

# Tableau associatif : chaque utilisateur est mapp√© √† l'OU relative (sans les DC) dans laquelle il doit √™tre cr√©√©
declare -A USERS_MAP
USERS_MAP["Victor_Hugo"]="OU=Comptabilit√©,OU=Users,OU=NS"
USERS_MAP["Jean_Delafontaine"]="OU=Finance,OU=Users,OU=NS"
USERS_MAP["George_Clemenceau"]="OU=Administration,OU=Users,OU=NS"

# Fichier pour sauvegarder les identifiants g√©n√©r√©s
USER_FILE="/root/northstar_users.txt"
echo "" > "$USER_FILE"

for USER in "${!USERS_MAP[@]}"; do
    PASSWORD=$(openssl rand -base64 16)
    OU_PATH=${USERS_MAP[$USER]}
    samba-tool user create "$USER" "$PASSWORD" --userou="$OU_PATH" | tee -a "$LOG_FILE"
    echo "$USER : $PASSWORD (OU: $OU_PATH)" >> "$USER_FILE"
    echo "$(date '+%Y-%m-%d %H:%M:%S') - Utilisateur $USER cr√©√© dans $OU_PATH avec mot de passe g√©n√©r√©." | tee -a "$LOG_FILE"
done

chmod 600 "$USER_FILE"
echo "$(date '+%Y-%m-%d %H:%M:%S') - Mots de passe des utilisateurs sauvegard√©s dans $USER_FILE." | tee -a "$LOG_FILE"

echo "====================" | tee -a "$LOG_FILE"

#############################
# 4. Application des politiques de s√©curit√© (mots de passe)
#############################
echo "$(date '+%Y-%m-%d %H:%M:%S') - Application des politiques de mots de passe..." | tee -a "$LOG_FILE"

# Active la complexit√© du mot de passe (exige la pr√©sence de lettres majuscules, minuscules, chiffres et symboles)
samba-tool domain passwordsettings set --complexity=on | tee -a "$LOG_FILE"

# D√©finit l'historique des mots de passe √† 24, emp√™chant ainsi la r√©utilisation des 24 derniers mots de passe
samba-tool domain passwordsettings set --history-length=24 | tee -a "$LOG_FILE"

# D√©finit l'√¢ge minimum d'un mot de passe √† 1 jour (l'utilisateur ne peut pas changer son mot de passe avant 1 jour)
samba-tool domain passwordsettings set --min-pwd-age=1 | tee -a "$LOG_FILE"

# D√©finit l'√¢ge maximum d'un mot de passe √† 90 jours (le mot de passe doit √™tre chang√© au moins tous les 90 jours)
samba-tool domain passwordsettings set --max-pwd-age=90 | tee -a "$LOG_FILE"

# D√©finit la longueur minimale du mot de passe √† 14 caract√®res
samba-tool domain passwordsettings set --min-pwd-length=14 | tee -a "$LOG_FILE"

# D√©finit le seuil de verrouillage du compte √† 5 tentatives √©chou√©es (apr√®s 5 √©checs, le compte est verrouill√©)
samba-tool domain passwordsettings set --account-lockout-threshold=5 | tee -a "$LOG_FILE"

# D√©finit la dur√©e du verrouillage du compte √† 30 minutes
samba-tool domain passwordsettings set --account-lockout-duration=30 | tee -a "$LOG_FILE"

# D√©finit le d√©lai de r√©initialisation du compteur de verrouillage √† 15 minutes (apr√®s 15 minutes, le compteur d'√©checs est remis √† z√©ro)
samba-tool domain passwordsettings set --reset-account-lockout-after=15 | tee -a "$LOG_FILE"


echo "====================" | tee -a "$LOG_FILE"

#############################
# 5. Nettoyage final
#############################
echo "$(date '+%Y-%m-%d %H:%M:%S') - Nettoyage des paquets obsol√®tes..." | tee -a "$LOG_FILE"
apt autoremove -y | tee -a "$LOG_FILE"
apt autoclean -y | tee -a "$LOG_FILE"

echo "$(date '+%Y-%m-%d %H:%M:%S') - üéâ Configuration des OU, utilisateurs et politiques de s√©curit√© termin√©e avec succ√®s !" | tee -a "$LOG_FILE"
echo "====================" | tee -a "$LOG_FILE"
